topics : 
- highlights
- class 
- spread and rest operator (...)
- destructuring 



knowledge of html :
tut : JS 
Inside a host environment , JS connected to objects of its environment to provide programmic control over them.
// i am so happy to choose prashanthi as my roommate !!!! :P 
1. client side : provides a object to control its browser and its DOM 
  client side extensions allow application to place elements on AN html form and respond to user events such as mouse clicks , form input and page navigation
  
2. server side : objects related to running JS on server 
   - server side extension allow application to cummunicate with database 
   - provide continuity of information from one invocation to another 
   - file manipulation on server
   
   
JAVA VS JS
1. prototype based - js 
   class- based - java
   prototype based models provide dynamic inheritance : 
2 : data protection not much in JS 
 3. variable data type not declared : js
   java fast execution  : variable : static declaration 
   
 4. cannot automatically write to harddisk : js
   can automatically write to harddisk in java.
   
 
class ::
are blueprint of objects 
property and method 


spread and rest operators : 
spread ::: used to split up array elements or object properties 
rest : used to merge a list of function argument into an array 


example of spread operator : 
1.
const numbers = [1,2,3,4] ;
const newNumbers = [... numbers , 5,6 ]; 
console.log(newNumbers) ;  // use of spread ...
out put : [1, 2, 3, 4, 5, 6]

2. 
const person = {
  name : 'smriti'
};
const newPerson = {
  ... person,
  age: 19 
};

console.log(newPerson);

output : 
[object Object] {
  age: 19,
  name: "smriti"
}

example of rest : 
const filter = (...args)=>{
  return args.filter(el => el ===1 ) ;
}

console.log(filter(1,2,3));
output :: [1]



destructuring :::
easily extract SINGLE  array elements or object properties and store them in variables 

array destructuring and object destructuring 
[a ,b ] = ['smriti','priya']

